import{jsx as _jsx,jsxs as _jsxs}from"react/jsx-runtime";import{useState,startTransition}from"react";import{addPropertyControls,ControlType}from"framer";/**
 * Dynamic dropdown that switches to text input when "Other" is selected
 *
 * @framerSupportedLayoutWidth any-prefer-fixed
 * @framerSupportedLayoutHeight auto
 */export default function DynamicInput(props){const{label,options,placeholder,backgroundColor,textColor,borderColor,focusBorderColor,labelFont,inputFont,borderRadius}=props;const[selectedValue,setSelectedValue]=useState("");const[customValue,setCustomValue]=useState("");const[isFocused,setIsFocused]=useState(false);const showTextInput=selectedValue==="Other";const handleSelectChange=e=>{const value=e.target.value;startTransition(()=>{setSelectedValue(value);if(value!=="Other"){setCustomValue("");}});};const handleTextChange=e=>{startTransition(()=>{setCustomValue(e.target.value);});};const inputStyles={width:"100%",padding:"12px 16px",backgroundColor,color:textColor,border:`1px solid ${isFocused?focusBorderColor:borderColor}`,borderRadius,outline:"none",transition:"border-color 0.2s ease",...inputFont};return /*#__PURE__*/_jsxs("div",{style:{...props.style,display:"flex",flexDirection:"column",gap:8,width:"100%"},children:[/*#__PURE__*/_jsx("label",{style:{color:textColor,...labelFont},children:label}),!showTextInput?/*#__PURE__*/_jsxs("select",{value:selectedValue,onChange:handleSelectChange,onFocus:()=>startTransition(()=>setIsFocused(true)),onBlur:()=>startTransition(()=>setIsFocused(false)),name:label,style:{...inputStyles,cursor:"pointer"},children:[/*#__PURE__*/_jsx("option",{value:"",disabled:true,children:placeholder}),options.map((option,index)=>/*#__PURE__*/_jsx("option",{value:option,children:option},index))]}):/*#__PURE__*/_jsx("input",{type:"text",value:customValue,onChange:handleTextChange,onFocus:()=>startTransition(()=>setIsFocused(true)),onBlur:()=>startTransition(()=>setIsFocused(false)),placeholder:"Please specify...",name:label,style:inputStyles,autoFocus:true})]});}addPropertyControls(DynamicInput,{label:{type:ControlType.String,title:"Label",defaultValue:"Select an option"},options:{type:ControlType.Array,title:"Options",control:{type:ControlType.String},defaultValue:["Option 1","Option 2","Option 3","Other"]},placeholder:{type:ControlType.String,title:"Placeholder",defaultValue:"Choose an option..."},backgroundColor:{type:ControlType.Color,title:"Background",defaultValue:"#FFFFFF"},textColor:{type:ControlType.Color,title:"Text Color",defaultValue:"#000000"},borderColor:{type:ControlType.Color,title:"Border Color",defaultValue:"#EEEEEE"},focusBorderColor:{type:ControlType.Color,title:"Focus Border",defaultValue:"#000000"},labelFont:{type:ControlType.Font,title:"Label Font",controls:"extended",defaultFontType:"sans-serif",defaultValue:{fontSize:"14px",variant:"Semibold",letterSpacing:"-0.01em",lineHeight:"1.2em"}},inputFont:{type:ControlType.Font,title:"Input Font",controls:"extended",defaultFontType:"sans-serif",defaultValue:{fontSize:"15px",variant:"Medium",letterSpacing:"-0.01em",lineHeight:"1.3em"}},borderRadius:{type:ControlType.Number,title:"Border Radius",defaultValue:8,min:0,max:32,step:1}});
export const __FramerMetadata__ = {"exports":{"default":{"type":"reactComponent","name":"DynamicInput","slots":[],"annotations":{"framerSupportedLayoutHeight":"auto","framerContractVersion":"1","framerSupportedLayoutWidth":"any-prefer-fixed"}},"__FramerMetadata__":{"type":"variable"}}}
//# sourceMappingURL=./DynamicInput.map